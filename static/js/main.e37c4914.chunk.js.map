{"version":3,"sources":["Components/Form/Form.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js"],"names":["Form","onSubmit","useState","name","setName","number","setNumber","id","setId","useEffect","generate","handleChange","e","currentTarget","value","reset","preventDefault","type","onChange","ContactsRender","contactsList","onDelete","map","onClick","Filter","onFilterChanged","App","contacts","setContacts","filter","setFilter","parsedContacts","JSON","parse","window","localStorage","getItem","setItem","stringify","filteredContactList","toLowerCase","includes","contact","find","alert","state","rId","ReactDOM","render","document","querySelector"],"mappings":"gNAIe,SAASA,EAAT,GAA6B,IAAbC,EAAY,EAAZA,SAAY,EACjBC,mBAAS,IADQ,mBAClCC,EADkC,KAC5BC,EAD4B,OAEbF,mBAAS,IAFI,mBAElCG,EAFkC,KAE1BC,EAF0B,OAGrBJ,mBAAS,IAHY,mBAGlCK,EAHkC,KAG9BC,EAH8B,KAKzCC,qBAAU,WACRD,EAAME,wBACL,CAACP,EAAME,IAEV,IAAMM,EAAe,SAAAC,GAAM,IAAD,EACAA,EAAEC,cAAlBV,EADgB,EAChBA,KAAMW,EADU,EACVA,MACd,OAAQX,GACN,IAAK,OACHC,EAAQU,GACR,MAEF,IAAK,SACHR,EAAUQ,GACV,MAEF,QACE,SAWAC,EAAQ,WACZX,EAAQ,IACRE,EAAU,KAGZ,OACE,uBAAML,SAba,SAAAW,GACnBA,EAAEI,iBAEFf,EAAS,CAAEM,KAAIJ,OAAME,WACrBU,KASA,UACE,yCAEE,uBACEE,KAAK,QACLd,KAAK,OACLW,MAAOX,EACPe,SAAUP,OAGd,2CAEE,uBACEM,KAAK,OACLd,KAAK,SACLW,MAAOT,EACPa,SAAUP,OAGd,wBAAQM,KAAK,SAAb,4BC7DS,SAASE,EAAT,GAAqD,IAA3BC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,SACrD,OACE,mCACE,6BACGD,GACCA,EAAaE,KAAI,gBAAGf,EAAH,EAAGA,GAAIJ,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACf,+BACE,iCACGF,EADH,MACYE,KAEZ,wBAAQY,KAAK,SAASM,QAAS,kBAAMF,EAASd,IAA9C,sBAJOA,UCNrB,IAceiB,EAdA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAMhB,OACE,0DAEE,uBAAOR,KAAK,OAAOC,SARK,SAAAN,GAC1B,IAAME,EAAQF,EAAEC,cAAcC,MAC9BW,EAAgBX,UCEL,SAASY,IAAO,IAAD,EACIxB,mBAAS,CACvC,CAAEK,GAAI,OAAQJ,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEE,GAAI,OAAQJ,KAAM,iBAAkBE,OAAQ,aAC9C,CAAEE,GAAI,OAAQJ,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEE,GAAI,OAAQJ,KAAM,iBAAkBE,OAAQ,eALpB,mBACrBsB,EADqB,KACXC,EADW,OAOA1B,mBAAS,IAPT,mBAOrB2B,EAPqB,KAObC,EAPa,KAkC5BrB,qBAAU,WACR,IAAMsB,EAAiBC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,aAC1DL,GACFH,EAAYG,KAEb,IAEHtB,qBAAU,WACRyB,OAAOC,aAAaE,QAAQ,WAAYL,KAAKM,UAAUX,MACtD,CAACA,IAEJ,IAAMY,EApBGZ,EAASE,QAAO,qBAAG1B,KACnBqC,cAAcC,SAASZ,EAAOW,kBAqBvC,OACE,qCACE,cAAC,EAAD,CAAMvC,SAxCS,SAAAyC,GACAf,EAASgB,MACxB,qBAAGxC,KAAgBqC,gBAAkBE,EAAQvC,KAAKqC,iBAGlDI,MAAM,GAAD,OAAIF,EAAQvC,KAAZ,gCAGPyB,GAAY,SAAAiB,GAAK,OAAKH,GAAL,mBAAiBG,UAiChC,cAAC,EAAD,CAAQpB,gBA9BY,SAAAI,GACtBC,EAAUD,MA8BR,cAAC,EAAD,CAAaT,aAAcmB,EAAqBlB,SArBnC,SAAAyB,GACflB,EAAYD,EAASE,QAAO,qBAAGtB,KAAgBuC,YCjCnDC,IAASC,OAAO,cAACtB,EAAD,IAASuB,SAASC,cAAc,Y","file":"static/js/main.e37c4914.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { generate } from 'shortid';\nimport './Form.css';\n\nexport default function Form({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [id, setId] = useState('');\n\n  useEffect(() => {\n    setId(generate());\n  }, [name, number]);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({ id, name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"phone\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n        ></input>\n      </label>\n      <label>\n        Number\n        <input\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n        ></input>\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n","export default function ContactsRender({ contactsList, onDelete }) {\n  return (\n    <>\n      <ul>\n        {contactsList &&\n          contactsList.map(({ id, name, number }) => (\n            <li key={id}>\n              <span>\n                {name} - {number}\n              </span>\n              <button type=\"button\" onClick={() => onDelete(id)}>\n                Delete\n              </button>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n}\n","const Filter = ({ onFilterChanged }) => {\n  const handleFilterChanged = e => {\n    const value = e.currentTarget.value;\n    onFilterChanged(value);\n  };\n\n  return (\n    <label>\n      Find contacts by name\n      <input type=\"text\" onChange={handleFilterChanged}></input>\n    </label>\n  );\n};\n\nexport default Filter;\n","import React, { useState, useEffect } from 'react';\nimport Form from './Components/Form/Form';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\n\nexport default function App() {\n  const [contacts, setContacts] = useState([\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ]);\n  const [filter, setFilter] = useState('');\n\n  const addContact = contact => {\n    const isFinded = contacts.find(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase(),\n    );\n    if (isFinded) {\n      alert(`${contact.name} is already in the contacts`);\n      return;\n    }\n    setContacts(state => [contact, ...state]);\n  };\n\n  const onFilterChanged = filter => {\n    setFilter(filter);\n  };\n\n  const filterContactList = () => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const onDelete = rId => {\n    setContacts(contacts.filter(({ id }) => id !== rId));\n  };\n\n  useEffect(() => {\n    const parsedContacts = JSON.parse(window.localStorage.getItem('contacts'));\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const filteredContactList = filterContactList();\n\n  return (\n    <>\n      <Form onSubmit={addContact} />\n      <Filter onFilterChanged={onFilterChanged} />\n      <ContactList contactsList={filteredContactList} onDelete={onDelete} />\n    </>\n  );\n}\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}